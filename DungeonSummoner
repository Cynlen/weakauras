print("|cff7155B3Initializing Dungeon Summoner WeakAura...|r")

local dungeons = {
    {name = "DOTI", zoneIDs = {2025, 2190}},
    {name = "DHT_BRH", zoneIDs = {641}, differentiateByCoordinates = true},
    {name = "TOTT", zoneIDs = {204, 322}},
    {name = "AD", zoneIDs = {862, 934}},
    {name = "WM", zoneIDs = {9, 10}},
    {name = "EB", zoneIDs = {543, 620}}
}

local function getPlayerGPS()
    local uiMapID = C_Map.GetBestMapForUnit("player")
    if not uiMapID then return nil end
    
    local position = C_Map.GetPlayerMapPosition(uiMapID, "player")
    if position then
        local x, y = position:GetXY()
        return x, y
    else
        return nil
    end
end

local function isUserInDungeonZone(userZoneID)
    local x, y = getPlayerGPS()
    
    for _, dungeon in ipairs(dungeons) do
        for _, zoneID in ipairs(dungeon.zoneIDs) do
            if userZoneID == zoneID then
                if dungeon.differentiateByCoordinates and dungeon.name == "DHT_BRH" then
                    if x then
                        if x < 0.50 then
                            return true, "BRH", dungeon.zoneIDs
                        else
                            return true, "DHT", dungeon.zoneIDs
                        end
                    else
                        return false
                    end
                else
                    return true, dungeon.name, dungeon.zoneIDs
                end
            end
        end
    end
    return false
end

local function PrintGroupMembersZoneIDsAndSummonNeeds()
    local playerZoneID = C_Map.GetBestMapForUnit("player")
    --print(playerZoneID)
    if not playerZoneID then
        print("Your zone ID could not be determined.")
        return
    end
    
    local inDungeon, dungeonName, acceptableZoneIDs = isUserInDungeonZone(playerZoneID)
    if not inDungeon then
        print("You are not in a dungeon zone, you can't help summon")
        return
    end
    
    print("You are in zone ID: " .. playerZoneID .. " (" .. dungeonName .. ")")
    if IsInGroup() and not IsInRaid() then
        local numMembers = GetNumSubgroupMembers()
        
        for i = 1, numMembers do
            local unitID = "party" .. i
            local memberName = GetUnitName(unitID, false)
            local zoneID = C_Map.GetBestMapForUnit(unitID)
            local needsSummon = true
            
            if zoneID then
                for _, id in ipairs(acceptableZoneIDs) do
                    if zoneID == id then
                        needsSummon = false
                        break
                    end
                end
                
                local zoneName = C_Map.GetMapInfo(zoneID).name
                if needsSummon then
                    print("|cFFFF0000" .. memberName .. " is in zone ID: " .. zoneID .. " (" .. zoneName .. ") and needs summon.|r")
                else
                    print(memberName .. " is in an acceptable zone: " .. zoneID .. " (" .. zoneName .. "). No summon needed.")
                end
            else
                print(memberName .. "'s zone ID could not be determined.")
            end
        end
    else
        print("You are not in a group or you are in a raid, which is not supported.")
    end
end

PrintGroupMembersZoneIDsAndSummonNeeds()

