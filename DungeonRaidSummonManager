print("|cff7155B3Initializing summon checker...|r")

-- Define a table containing dungeon names as keys and their corresponding instance IDs as values
local dungeonInstances = {
    ["DOTI"] = { 2444, 2579 }, -- Example dungeon with two instance IDs: summon stone and inside
    ["Blackrook Hold"] = { 34, 1176 }, 
    ["Everbloom"] = { 34, 1176 },
    ["Waycrest Manor"] = { 34, 1176 },
    ["Atal'Dazar"] = { 34, 1176 },
    ["Darkheart Thicket"] = { 34, 1176 },
    ["Throne of the Tides"] = { 34, 1176 },
}

if IsInGroup() then
    -- Get the current user's zone text and zone ID
    local playerZoneText = GetZoneText()
    local _, _, _, playerZoneID = UnitPosition("player")
    
    -- Print the current user's zone text and zone ID
    print("Your Zone Text: " .. playerZoneText)
    print("Your Zone ID: " .. playerZoneID)
    
    -- Check if the player's zone ID is in the dungeonInstances table
    local dungeonName = nil
    for name, instanceIDs in pairs(dungeonInstances) do
        if playerZoneID == instanceIDs[1] or playerZoneID == instanceIDs[2] then
            dungeonName = name
            break
        end
    end
    
    -- If the player is in a dungeon instance, print the dungeon name and check party members
    if dungeonName then
        print("Setting Key to " .. dungeonName)
        -- Retrieve the correct instance IDs based on the dungeon name
        local correctInstanceIDs = dungeonInstances[dungeonName]
        
        -- Iterate through each member of the party
        for i = 1, GetNumGroupMembers() do
            local unit = "party" .. i
            local name = GetUnitName(unit, true)
            if name then
                -- Get each party member's zone text and zone ID
                local _, _, _, memberZoneID = UnitPosition(unit)
                
                -- Check if the member is in the correct zone IDs for the dungeon
                local found = false
                if memberZoneID == correctInstanceIDs[1] or memberZoneID == correctInstanceIDs[2] then
                    found = true
                end
                
                -- If the member is not in the correct zone IDs, prompt for summoning
                if not found then
                    print(name .. " needs to be summoned to " .. dungeonName)
                end
            end
        end
    end
end

